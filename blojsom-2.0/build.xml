<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- blojsom                                                                 -->
<!-- ======================================================================= -->
<project name="blojsom" default="compile" basedir=".">

    <property name="name" value="blojsom"/>
    <property name="version" value="2.26"/>

    <property name="distro.dir" value="${basedir}/distro"/>
    <property name="war.file" value="${distro.dir}/${name}.war"/>
    <property name="compile.dir" value="${basedir}/classes"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="plugins.src.dir" value="${basedir}/plugins/src"/>
    <property name="extensions.src.dir" value="${basedir}/extensions/src"/>
    <property name="test.src.dir" value="${basedir}/test/src"/>
    <property name="war.dir" value="${basedir}/war"/>
    <property name="resources.dir" value="${war.dir}/resources"/>
    <property name="webinf.dir" value="${war.dir}/WEB-INF"/>
    <property name="webinf.lib.dir" value="${webinf.dir}/lib"/>
    <property name="build.dir" value="${webinf.dir}/classes"/>
    <property name="docs.dir" value="${basedir}/docs"/>
    <property name="javadoc.dir" value="${docs.dir}/content/javadoc"/>
    <property name="javadoc.zip" value="${distro.dir}/${name}-javadocs.zip"/>
    <property name="properties.dir" value="${basedir}/properties"/>
    <property name="templates.dir" value="${basedir}/templates"/>
    <property name="themes.dir" value="${basedir}/themes"/>
    <property name="default.theme.dir" value="${themes.dir}/asual/"/>
    <property name="default.theme.templates.dir" value="${default.theme.dir}/templates/"/>
    <property name="default.theme.resources.dir" value="${default.theme.dir}/resources/"/>
    <property name="core.jar" value="${webinf.lib.dir}/${name}-core-${version}.jar"/>
    <property name="resources.jar" value="${webinf.lib.dir}/${name}-resources-${version}.jar"/>
    <property name="plugins.jar" value="${webinf.lib.dir}/${name}-plugins-${version}.jar"/>
    <property name="plugins-templates.jar" value="${webinf.lib.dir}/${name}-plugins-templates-${version}.jar"/>
    <property name="extensions.jar" value="${webinf.lib.dir}/${name}-extensions-${version}.jar"/>
    <property name="templates.jar" value="${webinf.lib.dir}/${name}-templates-${version}.jar"/>
    <property name="website.zip" value="${distro.dir}/${name}-website.zip"/>
    <property name="default.user" value="default"/>
    <property name="bootstrap.user" value="bootstrap"/>

    <!-- Add-on properties -->
    <property name="addon.lib.dir" value="${basedir}/addon-lib"/>

    <property name="addon.extensions.src.dir" value="${basedir}/addon/extensions/src"/>
    <property name="addon.plugins.src.dir" value="${basedir}/addon/plugins/src"/>
    <property name="addon.core.src.dir" value="${basedir}/addon/core/src"/>

    <property name="addon.core.jar" value="${webinf.lib.dir}/${name}-addon-core-${version}.jar"/>
    <property name="addon.plugins.jar" value="${webinf.lib.dir}/${name}-addon-plugins-${version}.jar"/>
    <property name="addon.extensions.jar" value="${webinf.lib.dir}/${name}-addon-extensions-${version}.jar"/>
    <property name="addon.resources.jar" value="${webinf.lib.dir}/${name}-addon-resources-${version}.jar"/>

    <property name="debug" value="on"/>
    <property name="deprecation" value="on"/>
    <property name="optimize" value="on"/>

    <!-- =================================================================== -->
    <!-- Classpath                                                           -->
    <!-- =================================================================== -->
    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${webinf.lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${addon.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- =================================================================== -->
    <!-- Sourcepath (for javadoc)                                            -->
    <!-- =================================================================== -->
    <path id="source.path">
        <pathelement path="${src.dir}"/>
        <pathelement path="${plugins.src.dir}"/>
        <pathelement path="${extensions.src.dir}"/>
        <pathelement path="${addon.core.src.dir}"/>
        <!-- <pathelement path="${addon.extensions.src.dir}"/> -->
        <pathelement path="${addon.plugins.src.dir}"/>
    </path>

    <!-- =================================================================== -->
    <!-- Prepares the build process                                          -->
    <!-- =================================================================== -->
    <target name="prepare" description="Prepares the build by creating necessary directories and copying necessary files">
        <tstamp/>
        <mkdir dir="${compile.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${distro.dir}"/>
        <copy todir="${build.dir}">
            <fileset dir="${properties.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <!-- Copy general templates for default user -->
        <mkdir dir="${war.dir}/WEB-INF/${default.user}/templates/"/>
        <copy todir="${war.dir}/WEB-INF/${default.user}/templates/">
            <fileset dir="${templates.dir}">
                <include name="**/*.vm"/>
                <exclude name="**/html*.vm"/>
            </fileset>
        </copy>

        <!-- Copy general templates for bootstrap user -->
        <mkdir dir="${war.dir}/WEB-INF/${bootstrap.user}/templates/"/>
        <copy todir="${war.dir}/WEB-INF/${bootstrap.user}/templates/">
            <fileset dir="${templates.dir}">
                <include name="**/*.vm"/>
                <exclude name="**/html*.vm"/>
            </fileset>
        </copy>

        <!-- Copy theme templates and resources for default user -->
        <mkdir dir="${resources.dir}/${default.user}"/>
        <copy todir="${war.dir}/WEB-INF/${default.user}/templates">
            <fileset dir="${default.theme.templates.dir}"/>
        </copy>
        <copy todir="${resources.dir}/${default.user}">
            <fileset dir="${default.theme.resources.dir}"/>
        </copy>

        <!-- Copy theme templates and resources for bootstrap user -->
        <mkdir dir="${war.dir}/WEB-INF/${bootstrap.user}/resources/"/>
        <copy todir="${war.dir}/WEB-INF/${bootstrap.user}/templates">
            <fileset dir="${default.theme.templates.dir}"/>
        </copy>
        <copy todir="${war.dir}/WEB-INF/${bootstrap.user}/resources">
            <fileset dir="${default.theme.resources.dir}"/>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Cleans up generated stuff                                           -->
    <!-- =================================================================== -->
    <target name="clean" description="Removes generated files from the build">
        <delete dir="${compile.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="${docs.dir}"/>
        <delete dir="${distro.dir}"/>
        <delete dir="${build.dir}"/>
        <delete>
            <fileset dir="${webinf.lib.dir}" includes="${name}-*.jar"/>
        </delete>
        <delete file="${war.file}"/>
        <delete dir="${webinf.dir}/themes"/>
        <delete dir="${resources.dir}/${default.user}" includeemptydirs="true"/>
        <delete dir="${resources.dir}/${bootstrap.user}" includeemptydirs="true"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile" depends="prepare" description="Compiles the core, plugin, and extensions">
        <!-- Core -->
        <javac srcdir="${src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${core.jar}" basedir="${compile.dir}"/>

        <!-- Plugins -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${plugins.jar}" basedir="${compile.dir}"/>

        <!-- Plugins templates -->
        <jar file="${plugins-templates.jar}" basedir="${plugins.src.dir}" includes="**/*.vm"/>

        <!-- Extensions -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${extensions.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            excludes="**/Test*"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${extensions.jar}" basedir="${compile.dir}"/>

        <!-- Resources -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <copy todir="${compile.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${compile.dir}">
            <fileset dir="${extensions.src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${compile.dir}">
            <fileset dir="${plugins.src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <jar file="${resources.jar}" basedir="${compile.dir}"/>

        <delete dir="${compile.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code and does not delete nor jar. For Testing   -->
    <!-- =================================================================== -->
    <target name="compile-for-testing" depends="prepare" description="Compiles the class files">
        <!-- Core -->
        <javac srcdir="${src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${extensions.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <!--
        <javac srcdir="${test.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        -->
        <javac srcdir="${addon.core.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${addon.plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the add-on source code                                     -->
    <!-- =================================================================== -->
    <target name="compile-addon" depends="compile" description="Compiles the add-on core, extensions, and plugins">
        <!-- Add-on core -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${addon.core.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${addon.core.jar}" basedir="${compile.dir}"/>
        <delete dir="${compile.dir}"/>

        <!-- Add-on plugins -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${addon.plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <copy todir="${compile.dir}">
            <fileset dir="${addon.plugins.src.dir}" includes="**/*.vm"/>
        </copy> 
        <jar file="${addon.plugins.jar}" basedir="${compile.dir}"/>
        <delete dir="${compile.dir}"/>

        <!-- Add-on extensions -->
        <!--
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${addon.extensions.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${addon.extensions.jar}" basedir="${compile.dir}"/>
        <delete dir="${compile.dir}"/>
        -->

        <!-- Resources -->
        <!--
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <copy todir="${compile.dir}">
            <fileset dir="${addon.src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${compile.dir}">
            <fileset dir="${addon.extensions.src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${compile.dir}">
            <fileset dir="${addon.plugins.src.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <jar file="${addon.resources.jar}" basedir="${compile.dir}"/>
        <delete dir="${compile.dir}"/>
        -->
    </target>

    <!-- =================================================================== -->
    <!-- Create the war file                                                 -->
    <!-- NOTE: To create the Quickstart distribution, do the following:      -->
    <!--
         1. Add the following to /WEB-INF/default/authorization.properties:
            default=123default456
         2. Remove the blog-home, blog-url, and blog-base-url properties from /WEB-INF/default/blog.properties
         3. Remove the following line from /WEB-INF/plugin-admin-edit-users.properties:
            blog-home-base-directory=/change/me/please/
         4. Change the blojsom-blog-home parameter in /WEB-INF/blojsom.properties to:
            blojsom-blog-home={user.home}/blojsom-blogs/
    -->
    <!-- =================================================================== -->
    <target name="war" depends="compile" description="Create a deployable WAR file">
        <copy todir="${war.dir}/WEB-INF/themes">
            <fileset dir="${themes.dir}"/>
        </copy>

        <!-- Uncomment this if you want to JAR up the templates for running blojsom from a WAR file (i.e. a packed WAR) -->
        <!-- <jar jarfile="${templates.jar}" basedir="${templates.dir}"/> -->

        <jar jarfile="${war.file}" basedir="${war.dir}"/>
        <delete dir="${war.dir}/WEB-INF/default/templates"/>
        <delete dir="${war.dir}/themes"/>
    </target>

    <!-- =================================================================== -->
    <!-- Create the add-on bundle                                            -->
    <!-- =================================================================== -->
    <target name="create-addon-bundle" depends="compile-addon" description="Create the add-on bundle">
        <tstamp/>
        <zip zipfile="${distro.dir}/${name}-${version}-addons.zip">
            <fileset dir="${webinf.lib.dir}">
                <include name="${name}-addon-*.jar"/>
            </fileset>
            <fileset dir="${addon.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${properties.dir}">
                <include name="oscache.properties"/>
            </fileset>
        </zip>
    </target>

    <!-- =================================================================== -->
    <!-- Create the themes bundle                                            -->
    <!-- =================================================================== -->
    <target name="create-themes-bundle" description="Create the themes bundle">
        <tstamp/>
        <zip zipfile="${distro.dir}/${name}-${version}-themes.zip">
            <fileset dir="${themes.dir}">
                <include name="**/*"/>
            </fileset>
        </zip>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadoc" description="Creates the API documentation">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc packagenames="org.*"
            destdir="${javadoc.dir}"
            author="true"
            version="true"
            use="true"
            windowtitle="${name} ${version} API"
            doctitle="${name} ${version} API">
            <group
                packages="org.*:org.blojsom.authorization.*:org.blojsom.blog.*:org.blojsom.dispatcher.*:org.blojsom.event.*:org.blojsom.fetcher.*:org.blojsom.filter.*:org.blojsom.servlet.*:org.blojsom.util.*:org.blojsom.util.resources.*"
                title="blojsom core"/>
            <group packages="org.blojsom.extension.*"
                title="blojsom extensions"/>
            <group packages="org.blojsom.plugin.*"
                title="blojsom plugins"/>
            <classpath refid="build.classpath"/>
            <sourcepath refid="source.path"/>
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a ZIP of the documentation for the website                  -->
    <!-- =================================================================== -->
    <target name="website-docs" depends="javadoc" description="Creates a ZIP for the blojsom website">
        <mkdir dir="${distro.dir}"/>
        <zip zipfile="${website.zip}" basedir="${docs.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Create a source distribution                                        -->
    <!-- =================================================================== -->
    <target name="create-source-distribution" depends="clean, prepare" description="Creates the source distribution">
        <tstamp/>
        <zip zipfile="${distro.dir}/${name}-${version}-source.zip">
            <zipfileset dir="${basedir}">
                <!-- Base files -->
                <include name="build.xml"/>
                <include name="LICENSE"/>
                <include name="README"/>

                <!-- Source directories -->
                <include name="addon/**"/>
                <include name="extensions/**"/>
                <include name="plugins/**"/>
                <include name="src/**"/>

                <!-- Library directory -->
                <include name="lib/"/>
                <include name="addon-lib/"/>

                <!-- Properties directory -->
                <include name="properties/"/>

                <!-- Templates and themes -->
                <include name="templates/"/>
                <include name="themes/**"/>

                <!-- WAR directory -->
                <include name="war/"/>
                <include name="war/WEB-INF"/>
                <include name="war/WEB-INF/lib"/>
                <exclude name="war/WEB-INF/lib/blojsom*.jar"/> 
            </zipfileset>
        </zip>
    </target>

    <target name="create-distribution" depends="clean, create-addon-bundle, create-source-distribution, create-themes-bundle"
        description="Create the add-on bundle, themes package, and source distribution">
    </target>

</project>

