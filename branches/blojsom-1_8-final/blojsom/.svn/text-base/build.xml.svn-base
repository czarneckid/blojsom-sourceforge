<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- blojsom                                                                 -->
<!-- ======================================================================= -->
<project name="blojsom" default="compile" basedir=".">

    <property name="name" value="blojsom"/>
    <property name="version" value="1.8.1"/>

    <property name="distro.dir" value="${basedir}/distro"/>
    <property name="war.file" value="${distro.dir}/${name}.war"/>
    <property name="compile.dir" value="${basedir}/classes"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="plugins.src.dir" value="${basedir}/plugins/src"/>
    <property name="extensions.src.dir" value="${basedir}/extensions/src"/>
    <property name="war.dir" value="${basedir}/war"/>
    <property name="webinf.dir" value="${war.dir}/WEB-INF"/>
    <property name="webinf.lib.dir" value="${webinf.dir}/lib"/>
    <property name="build.dir" value="${webinf.dir}/classes"/>
    <property name="javadoc.dir" value="${basedir}/docs/javadoc"/>
    <property name="javadoc.zip" value="${distro.dir}/${name}-javadocs.zip"/>
    <property name="properties.dir" value="${basedir}/properties"/>
    <property name="templates.dir" value="${basedir}/templates"/>
    <property name="themes.dir" value="${basedir}/themes"/>
    <property name="core.jar" value="${webinf.lib.dir}/${name}-core.jar"/>
    <property name="plugins.jar" value="${webinf.lib.dir}/${name}-plugins.jar"/>
    <property name="extensions.jar" value="${webinf.lib.dir}/${name}-extensions.jar"/>
    <property name="templates.jar" value="${name}-templates.jar"/>
    <property name="website.zip" value="${distro.dir}/blojsom-website.zip"/>

    <property name="debug" value="on"/>
    <property name="deprecation" value="on"/>
    <property name="optimize" value="on"/>

    <!-- =================================================================== -->
    <!-- Classpath                                                           -->
    <!-- =================================================================== -->
    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${webinf.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- =================================================================== -->
    <!-- Sourcepath (for javadoc)                                            -->
    <!-- =================================================================== -->
    <path id="source.path">
        <pathelement path="${src.dir}"/>
        <pathelement path="${plugins.src.dir}"/>
        <pathelement path="${extensions.src.dir}"/>
    </path>

    <!-- =================================================================== -->
    <!-- Prepares the build process                                          -->
    <!-- =================================================================== -->
    <target name="prepare">
        <tstamp/>
        <mkdir dir="${compile.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${distro.dir}"/>
        <copy todir="${build.dir}">
            <fileset dir="${properties.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${templates.dir}">
                <include name="**/*.vm"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Cleans up generated stuff                                           -->
    <!-- =================================================================== -->
    <target name="clean" description="Removes generated files">
        <delete dir="${compile.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="${javadoc.dir}"/>
        <delete dir="${distro.dir}"/>
        <delete file="${core.jar}"/>
        <delete file="${plugins.jar}"/>
        <delete file="${extensions.jar}"/>
        <delete file="${webinf.lib.dir}/${templates.jar}"/>
        <delete file="${war.file}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile" depends="prepare" description="Compiles the class files">
        <!-- Core -->
        <javac srcdir="${src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${core.jar}" basedir="${compile.dir}" />

        <!-- Plugins -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${plugins.jar}" basedir="${compile.dir}" />

        <!-- Extensions -->
        <delete dir="${compile.dir}"/>
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${extensions.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <jar file="${extensions.jar}" basedir="${compile.dir}" />
        <delete dir="${compile.dir}"/>
    </target>


    <!-- =================================================================== -->
    <!-- Compiles the source code and does not delete nor jar. For Testing   -->
    <!-- =================================================================== -->
    <target name="compile-for-testing" depends="prepare" description="Compiles the class files">
        <!-- Core -->
        <javac srcdir="${src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${plugins.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${extensions.src.dir}"
            destdir="${compile.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="build.classpath"/>
        </javac>
    </target>


    <!-- =================================================================== -->
    <!-- Create the war file                                                 -->
    <!-- =================================================================== -->
    <target name="war" depends="clean,prepare,compile">
        <copydir src="${themes.dir}" dest="${war.dir}/themes"/>
        <jar jarfile="${war.file}" basedir="${war.dir}"/>
        <delete dir="${war.dir}/themes"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadoc" description="Creates the API documentation">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc packagenames="org.*"
            destdir="${javadoc.dir}"
            author="true"
            version="true"
            use="true"
            windowtitle="${name} ${version} API"
            doctitle="${name} ${version} API">
            <classpath refid="build.classpath"/>
            <sourcepath refid="source.path"/>
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a ZIP of the documentation for the website                  -->
    <!-- =================================================================== -->
    <target name="website-docs" depends="javadoc" description="Creates a ZIP for the blojsom website">
        <zip zipfile="${website.zip}" basedir="${basedir}/docs"/>
    </target>
</project>

